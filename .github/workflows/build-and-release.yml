name: Build and Release

on:
  push:
    tags:
      - "v*" # Trigger on version tags (v1.0.0, v1.1.0, etc.)

# Set permissions for the GITHUB_TOKEN
permissions:
  contents: write    # Needed for creating releases and uploading assets
  packages: read
  issues: read

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            asset_name: AudioMetaEditor-Windows-v${{ github.ref_name }}.exe
            pyinstaller_args: --onefile --windowed --icon=app_icon.ico
            executable_path: dist/audio_metadata_editor.exe
          - os: macos-latest
            asset_name: AudioMetaEditor-macOS-Universal-v${{ github.ref_name }}.app.zip
            pyinstaller_args: --windowed --icon=app_icon.icns --target-architecture universal2 --name "Audio Metadata Editor"
            executable_path: dist/AudioMetaEditor-macOS-Universal-v${{ github.ref_name }}.app.zip
          - os: ubuntu-latest
            asset_name: AudioMetaEditor-Linux-v${{ github.ref_name }}.zip
            pyinstaller_args: --windowed --name "AudioMetaEditor"
            executable_path: dist/AudioMetaEditor-Linux-v${{ github.ref_name }}.zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mutagen
          pip install pyinstaller>=5.0  # Need newer version for universal2 support

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk python3-dev libtool-bin
          # Install AppImage tools
          sudo apt-get install -y fuse libfuse2
          wget -c https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O appimagetool
          chmod +x appimagetool

      # Windows build
      - name: Build executable for Windows
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller ${{ matrix.pyinstaller_args }} audio_metadata_editor.py

      # macOS build with proper .app bundle
      - name: Build macOS app bundle
        if: matrix.os == 'macos-latest'
        run: |
          # Build .app bundle
          pyinstaller ${{ matrix.pyinstaller_args }} audio_metadata_editor.py
          # Create a zip file of the .app bundle
          cd dist
          mv "Audio Metadata Editor.app" AudioMetaEditor.app
          zip -r AudioMetaEditor-macOS-Universal-v${{ github.ref_name }}.app.zip AudioMetaEditor.app
          # Make it executable
          chmod +x AudioMetaEditor-macOS-Universal-v${{ github.ref_name }}.app.zip

      # Linux build with proper packaging
      - name: Build Linux Package
        if: matrix.os == 'ubuntu-latest'
        run: |
          # Build the initial package with onefile for simplicity
          pyinstaller --onefile --windowed --name "AudioMetaEditor" audio_metadata_editor.py
          
          # Make executable
          chmod +x dist/AudioMetaEditor
          # Rename to include version
          mv dist/AudioMetaEditor dist/AudioMetaEditor-Linux-v${{ github.ref_name }}
          
          # Create a bash wrapper script
          cat > dist/run-audiometaeditor.sh << EOL
          #!/bin/bash
          # Script to run Audio Metadata Editor on Linux
          SCRIPT_DIR="\$(dirname "\$(readlink -f "\$0")")"
          cd "\$SCRIPT_DIR"
          ./AudioMetaEditor-Linux-v${{ github.ref_name }} "\$@"
          EOL
          
          chmod +x dist/run-audiometaeditor.sh
          
          # Create a README with instructions
          cat > dist/README.txt << EOL
          Audio Metadata Editor for Linux
          ============================
          
          To run the application:
          
          1. Open a terminal in this directory
          2. Run: ./run-audiometaeditor.sh
          
          Requirements:
          - Python 3.8 or higher with tkinter
          - Install with: sudo apt-get install python3-tk
          EOL
          
          # Create a zip file of all Linux files
          cd dist
          zip -r AudioMetaEditor-Linux-v${{ github.ref_name }}.zip AudioMetaEditor-Linux-v${{ github.ref_name }} run-audiometaeditor.sh README.txt

      - name: Upload executable as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.executable_path }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      # Prepare the artifacts for release
      - name: Prepare artifacts for release
        run: |
          mkdir -p release-artifacts
          find artifacts -type f -name '*' -exec cp {} release-artifacts/ \;
          ls -la release-artifacts/
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: release-artifacts/*
          draft: false
          prerelease: false
          body: |
            ## AudioMetaEditor ${{ github.ref_name }}

            ### Downloads
            Direct download links:
            
            - **Windows**: Download the .exe file below
            - **macOS**: Download the macOS file below (Universal binary for Intel and Apple Silicon)
            - **Linux**: Download the Linux file below (Built on Ubuntu)

            ### Changes

            <!-- Add changelog here -->
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
